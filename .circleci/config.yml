# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    description: "A very simple command that prints the pipeline id."
    steps:
        - run: echo $CIRCLE_WORKFLOW_ID

docker_image: &docker_image
  docker:
    - image: circleci/node:13.8.0

# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

# Declare jobs
jobs:
  print_name:
    <<: *docker_image
    steps:
      - print_pipeline_id
      - run:
          name: "echo an env var that is part of the project"
          command: |
            echo "my name is $MY_NAME"
  print_hello:
    <<: *docker_image
    steps:
      - print_pipeline_id
      - run: echo "hello"
  print_world:
    <<: *docker_image
    steps:
      - print_pipeline_id
      - run: echo "world"
  save_hello_world_output:
    <<: *docker_image
    steps:
      - print_pipeline_id
      - run: |
          mkdir /tmp/workspace
          echo "Hello, World!" > /tmp/workspace/output.txt
      - persist_to_workspace:
            root: /tmp/workspace
            paths:
                - output.txt
  print_output_file:
    <<: *docker_image
    steps:
        - print_pipeline_id
        - attach_workspace:
              at: /tmp/workspace
        - run: cat /tmp/workspace/output.txt


# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
  hello_world:
    jobs:
      - print_hello
      - print_world:
          requires:
            - print_hello
      - print_name
  shared_hello_world:
    jobs:
        - save_hello_world_output
        - print_output_file:
            requires:
              - save_hello_world_output

